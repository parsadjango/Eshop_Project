# Generated by Django 4.2.4 on 2023-08-21 12:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('price', models.IntegerField()),
                ('short_des', models.CharField(max_length=360, null=True)),
                ('description', models.TextField(db_index=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, default='', unique=True)),
                ('is_delete', models.BooleanField(verbose_name='deleted/undelete')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200, verbose_name='title')),
                ('url_title', models.CharField(db_index=True, max_length=200, verbose_name='URL in Title')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(db_index=True, max_length=50, verbose_name='TAGS')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_tags', to='product_module.product')),
            ],
            options={
                'verbose_name': 'Tags',
                'verbose_name_plural': 'Tags-List',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ManyToManyField(related_name='products_categories', to='product_module.productcategory'),
        ),
    ]
